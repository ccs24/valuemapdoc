define("mod_valuemapdoc/tabulatormap",["mod_valuemapdoc/tabulatorlib","core/ajax","core_user/repository","core/notification","jquery"],(function(Tabulator,Ajax,UserRepository,Notification,$){return{init:function(){var _document$querySelect;console.log("[tabulatormap] Module loaded");const el=document.querySelector("#valuemap-table-js");if(!el)return void console.warn("[tabulatormap] Table element not found");const columns=JSON.parse(el.dataset.columns),courseid=el.dataset.courseid,cmid=el.dataset.cmid,filtercmid=el.dataset.filtercmid||"",groupid=(null===(_document$querySelect=document.querySelector("#groupfilter"))||void 0===_document$querySelect?void 0:_document$querySelect.value)||0,fullscreenBtn=document.querySelector("#toggle-fullscreen");fullscreenBtn&&fullscreenBtn.addEventListener("click",(()=>{document.body.classList.toggle("valuemapdoc-fullscreen"),document.body.classList.contains("valuemapdoc-fullscreen")?fullscreenBtn.textContent="❎ Zamknij pełny ekran":fullscreenBtn.textContent="🔳 Pełny ekran"}));const enhancedColumns=function(columns){return[{formatter:"rowSelection",titleFormatter:"rowSelection",hozAlign:"center",headerSort:!1,width:50},...columns.map((col=>({...col,headerFilter:"input",editable:cell=>1!==cell.getRow().getData().ismaster,editor:"textarea"}))),{title:"Autor",field:"username",hozAlign:"left",headerSort:!0,width:120,headerFilter:"input",editable:!1,formatter:function(cell,formatterParams){const value=cell.getValue();return 1===cell.getRow().getData().ismaster?'<i class="fa fa-star text-warning" title="Master entry"></i> '+value:value}}]}(columns);Ajax.call([{methodname:"mod_valuemapdoc_get_entries",args:{courseid:courseid,cmid:cmid,include_master:filtercmid,groupid:groupid}}])[0].done((function(response){console.log("[tabulatormap] Entries loaded:",response.length,"records");const currentUsername=function(response){const currentUserId=M.cfg.userid,userEntry=response.find((entry=>entry.userid==currentUserId));return userEntry&&userEntry.username?userEntry.username:M.cfg.fullname||M.cfg.username||"Ja"}(response),table=new Tabulator(el,{data:response,columns:enhancedColumns,layout:"fitDataTable",height:"100%",width:"100%",pagination:!0,paginationSize:20,placeholder:"Brak danych do wyświetlenia",rowFormatter:function(row){1===row.getData().ismaster&&(row.getElement().style.backgroundColor="#eaffea",row.getElement().classList.add("ismaster"))},selectable:!0});table.setHeaderFilterValue("username",currentUsername),function(table,currentUsername){const toolbar=document.querySelector(".btn-toolbar");if(!toolbar)return;const filterContainer=document.createElement("div");filterContainer.className="btn-group ms-auto",filterContainer.setAttribute("role","group");const toggleButton=document.createElement("button");toggleButton.className="btn btn-outline-info btn-sm",toggleButton.setAttribute("type","button"),toggleButton.innerHTML='<i class="fa fa-user"></i> Tylko moje',toggleButton.title="Przełącz między moimi wpisami a wszystkimi";let showingOnlyMine=!0;toggleButton.addEventListener("click",(function(){showingOnlyMine?(table.clearHeaderFilter("username"),toggleButton.innerHTML='<i class="fa fa-users"></i> Wszystkie',toggleButton.className="btn btn-outline-secondary btn-sm",showingOnlyMine=!1):(table.setHeaderFilterValue("username",currentUsername),toggleButton.innerHTML='<i class="fa fa-user"></i> Tylko moje',toggleButton.className="btn btn-outline-info btn-sm",showingOnlyMine=!0)})),filterContainer.appendChild(toggleButton),toolbar.appendChild(filterContainer)}(table,currentUsername),table.on("cellEdited",(function(cell){const updatedData=cell.getRow().getData();Ajax.call([{methodname:"mod_valuemapdoc_update_cell",args:{id:updatedData.id,field:cell.getField(),value:cell.getValue()}}])[0].done((function(response){console.log("[tabulatormap] Cell updated successfully")})).fail((function(error){console.error("[tabulatormap] Error updating cell:",error),alert("Nie udało się zapisać zmian.")}))})),table.on("rowDblClick",(function(e,row){const data=row.getData();if(1===data.ismaster){const rateUrl="".concat(M.cfg.wwwroot,"/mod/valuemapdoc/edit.php?id=").concat(cmid,"&entryid=").concat(data.id);window.open(rateUrl)}}));const searchInput=document.querySelector("#valuemap-search");searchInput&&searchInput.addEventListener("input",(function(){const filterValue=this.value.toLowerCase();table.setFilter((data=>columns.some((col=>{var _data$field;const field=col.field;return null===(_data$field=data[field])||void 0===_data$field?void 0:_data$field.toString().toLowerCase().includes(filterValue)}))))}));const generateButton=document.querySelector("#generate-button");generateButton&&generateButton.addEventListener("click",(function(){const selectedData=table.getSelectedData();if(!selectedData.length)return void alert("Proszę zaznaczyć co najmniej jeden rekord.");const templateSelect=document.querySelector("#templateid");if(!templateSelect||!templateSelect.value)return void alert("Wybierz szablon przed generowaniem dokumentu.");const form=document.createElement("form");form.method="POST",form.action=generateButton.dataset.action||"generate.php";const idInput=document.createElement("input");idInput.type="hidden",idInput.name="id",idInput.value=cmid,form.appendChild(idInput);const templateInput=document.createElement("input");templateInput.type="hidden",templateInput.name="templateid",templateInput.value=templateSelect.value,form.appendChild(templateInput),selectedData.forEach((entry=>{const input=document.createElement("input");input.type="hidden",input.name="entryids[]",input.value=entry.id,form.appendChild(input)}));const filenameprefix=document.getElementById("filenameprefix");if(filenameprefix&&filenameprefix.value){const input=document.createElement("input");input.type="hidden",input.name="filenameprefix",input.value=filenameprefix.value,form.appendChild(input)}document.body.appendChild(form),form.submit()}));const editBulkButton=document.querySelector("#edit-bulk-button");editBulkButton&&editBulkButton.addEventListener("click",(function(){const selectedData=table.getSelectedData();if(selectedData.length)if(1===selectedData.length){const id=selectedData[0].id,url="".concat(M.cfg.wwwroot,"/mod/valuemapdoc/edit.php?id=").concat(cmid,"&entryid=").concat(id);window.location.href=url}else{const ids=selectedData.map((r=>r.id)),url=new URL("".concat(M.cfg.wwwroot,"/mod/valuemapdoc/edit_bulk.php"));url.searchParams.append("id",cmid),url.searchParams.append("entryids",ids.join(",")),window.open(url.toString())}else alert("Zaznacz rekordy do edycji.")}));const duplicateBulkButton=document.querySelector("#duplicate-bulk-button");duplicateBulkButton&&duplicateBulkButton.addEventListener("click",(function(){const selectedData=table.getSelectedData();if(!selectedData.length)return void alert("Zaznacz rekordy do powielenia.");const ids=selectedData.map((r=>r.id));Ajax.call([{methodname:"mod_valuemapdoc_create_entries_bulk",args:{entryids:ids,cmid:cmid}}])[0].done((response=>{table.updateOrAddData(response),table.deselectRow()})).fail((error=>{console.error("[tabulatormap] Error duplicating records:",error),alert("Nie udało się powielić rekordy.")}))}));const emptyBulkButton=document.querySelector("#empty-bulk-button");emptyBulkButton&&emptyBulkButton.addEventListener("click",(function(){Ajax.call([{methodname:"mod_valuemapdoc_create_entries_bulk",args:{entryids:{},cmid:cmid}}])[0].done((function(response){table.updateOrAddData(response),table.deselectRow()})).fail((error=>{console.error("[tabulatormap] Error creating empty records:",error)}))})),table.on("rowSelectionChanged",(function(data){["#delete-bulk-button","#generate-button","#move-bulk-button","#edit-bulk-button","#duplicate-bulk-button"].forEach((selector=>{const button=document.querySelector(selector);button&&(data.length>0?(button.disabled=!1,button.removeAttribute("disabled"),button.classList.remove("disabled")):(button.setAttribute("disabled",!0),button.classList.add("disabled"),button.disabled=!0))}))}));const deleteBulkButton=document.querySelector("#delete-bulk-button");deleteBulkButton&&deleteBulkButton.addEventListener("click",(function(){const selectedData=table.getSelectedData();if(!selectedData.length)return void alert("Zaznacz rekordy do usunięcia.");const filteredData=selectedData.filter((r=>1!==r.ismaster)),ids=filteredData.map((r=>r.id)),blocked=selectedData.length-filteredData.length;blocked>0&&alert("".concat(blocked," rekord(ów) typu Master nie mogą zostać usunięte i zostały pominięte.")),ids.length?confirm("Czy na pewno chcesz usunąć ".concat(ids.length," rekordów?"))&&Ajax.call([{methodname:"mod_valuemapdoc_delete_bulk",args:{entryids:ids,cmid:cmid}}])[0].done((()=>{ids.forEach((id=>table.deleteRow(id))),table.deselectRow()})).fail((error=>{console.error("[tabulatormap] Error deleting records:",error),alert("Nie udało się usunąć rekordów.")})):alert("Nie zaznaczono żadnych rekordów możliwych do usunięcia.")}));const moveBulkButton=document.querySelector("#move-bulk-button");moveBulkButton&&moveBulkButton.addEventListener("click",(function(){const selectedData=table.getSelectedData();selectedData.length?Ajax.call([{methodname:"mod_valuemapdoc_get_master_instances",args:{courseid:courseid}}])[0].done((function(instances){if(0!==instances.length)if(1===instances.length){const targetcmid=instances[0].cmid,ids=selectedData.map((r=>r.id));Ajax.call([{methodname:"mod_valuemapdoc_move_bulk",args:{entryids:ids,targetcmid:targetcmid}}])[0].done((()=>{ids.forEach((id=>table.deleteRow(id)))})).fail((error=>{console.error("[tabulatormap] Error moving records:",error),alert("Nie udało się przenieść rekordów.")}))}else alert("Znaleziono wiele instancji Master. Wybierz konkretną instancję z listy.");else alert("Brak dostępnych aktywności typu Master.")})).fail((error=>{console.error("[tabulatormap] Error getting master instances:",error),alert("Nie udało się pobrać listy Master Map.")})):alert("Zaznacz rekordy do przeniesienia.")}));const groupFilter=document.querySelector("#groupfilter");groupFilter&&groupFilter.addEventListener("change",(()=>{const selectedGroupId=groupFilter.value,currentFilterCmid=(null==masterFilter?void 0:masterFilter.value)||filtercmid,currentUsernameFilter=table.getHeaderFilterValue("username");Ajax.call([{methodname:"mod_valuemapdoc_get_entries",args:{courseid:courseid,cmid:cmid,include_master:currentFilterCmid,groupid:parseInt(selectedGroupId)}}])[0].done((function(newResponse){table.setData(newResponse),currentUsernameFilter&&table.setHeaderFilterValue("username",currentUsernameFilter)})).fail((function(error){console.error("[tabulatormap] Error loading data after group change:",error)}))}));const masterFilter=document.querySelector("#masterfilter");masterFilter&&masterFilter.addEventListener("change",(()=>{var _document$querySelect2;const newFilterCmid=masterFilter.value,currentUsernameFilter=table.getHeaderFilterValue("username");UserRepository.setUserPreference("mod_valuemapdoc_masterfilters",cmid+":"+newFilterCmid).then((()=>{console.log("[tabulatormap] Preference saved:",newFilterCmid)})).catch((error=>{console.error("[tabulatormap] Error saving preference:",error)})),Ajax.call([{methodname:"mod_valuemapdoc_get_entries",args:{courseid:courseid,cmid:cmid,include_master:newFilterCmid,groupid:(null===(_document$querySelect2=document.querySelector("#groupfilter"))||void 0===_document$querySelect2?void 0:_document$querySelect2.value)||0}}])[0].done((function(newResponse){table.setData(newResponse),currentUsernameFilter&&table.setHeaderFilterValue("username",currentUsernameFilter)})).fail((function(error){console.error("[tabulatormap] Error loading data after master change:",error)}))})),window.addEventListener("resize",(()=>{table.redraw(!0)}))})).fail((function(error){console.error("[tabulatormap] Error loading entries:",error),alert("Nie udało się załadować danych tabeli.")}))}}}));

//# sourceMappingURL=tabulatormap.min.js.map