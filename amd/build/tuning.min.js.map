{"version":3,"file":"tuning.min.js","sources":["../src/tuning.js"],"sourcesContent":["/* eslint no-trailing-spaces: \"off\", no-unused-vars: \"off\" *//* eslint jsdoc/require-jsdoc: \"off\" *//* global tinyMCE */\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n\n    return {\n        init: function() {\n\n            let isLoading = false; // Czy trwa zapytanie\n\n            function sendToGpt(promptText) {\n                if (isLoading) {\n                    return; // JeÅ›li Å‚adowanie, ignoruj klikniÄ™cie\n                }\n\n               // console.log('ðŸš€ WywoÅ‚ano sendToGpt z promptem:', promptText);\n\n\n                const original = $('.original-content-store').html();\n\n                if (!promptText || promptText.length < 5) {\n                    Notification.alert('Prompt too short', 'Please provide a prompt with at least 5 characters.');\n                    return;\n                }\n\n                const docid = $('input[name=\"docid\"]').val();\n\n                isLoading = true;\n                $('.generated-content-preview').html(\n                    '<div class=\"d-flex justify-content-center my-3\">' +\n                        '<div class=\"spinner-border\" role=\"status\">' +\n                            '<span class=\"visually-hidden\">Loading...</span>' +\n                        '</div>' +\n                    '</div>'\n                );\n                $('#tuningprompt').val('');\n\n                Ajax.call([{\n                    methodname: 'mod_valuemapdoc_tune_content_api',\n                    args: {\n                        originaltext: original,\n                        prompt: promptText,\n                        docid: docid\n                    }\n                }])[0]\n                .done(function(response) {\n                    $('.generated-content-preview').html(response.tunedtext);\n                    $('input[name=\"tunedresult\"]').val(response.tunedtext); \n                })\n                .fail(function(error) {\n                    Notification.exception(error);\n                })\n                .always(function() {\n                    isLoading = false;\n                });\n            } //sendToGpt\n\n            // Attach events\n            $('#send_prompt_button').on('click', function(e) {\n                e.preventDefault();\n                sendToGpt($('#tuningprompt').val());\n\n            });\n\n            $('.prompt-preset').on('click', function(e) {\n                e.preventDefault();\n                const prompt = $(this).data('prompt');\n                sendToGpt(prompt);\n            });\n\n            \n        }\n    };\n});"],"names":["define","$","Ajax","Notification","init","isLoading","sendToGpt","promptText","original","html","length","alert","docid","val","call","methodname","args","originaltext","prompt","done","response","tunedtext","fail","error","exception","always","on","e","preventDefault","this","data"],"mappings":"AACAA,gCAAO,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,oBAE5D,CACHC,KAAM,eAEEC,WAAY,WAEPC,UAAUC,eACXF,uBAOEG,SAAWP,EAAE,2BAA2BQ,WAEzCF,YAAcA,WAAWG,OAAS,cACnCP,aAAaQ,MAAM,mBAAoB,6DAIrCC,MAAQX,EAAE,uBAAuBY,MAEvCR,WAAY,EACZJ,EAAE,8BAA8BQ,KAC5B,yJAMJR,EAAE,iBAAiBY,IAAI,IAEvBX,KAAKY,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,CACFC,aAAcT,SACdU,OAAQX,WACRK,MAAOA,UAEX,GACHO,MAAK,SAASC,UACXnB,EAAE,8BAA8BQ,KAAKW,SAASC,WAC9CpB,EAAE,6BAA6BY,IAAIO,SAASC,cAE/CC,MAAK,SAASC,OACXpB,aAAaqB,UAAUD,UAE1BE,QAAO,WACJpB,WAAY,KAKpBJ,EAAE,uBAAuByB,GAAG,SAAS,SAASC,GAC1CA,EAAEC,iBACFtB,UAAUL,EAAE,iBAAiBY,UAIjCZ,EAAE,kBAAkByB,GAAG,SAAS,SAASC,GACrCA,EAAEC,iBAEFtB,UADeL,EAAE4B,MAAMC,KAAK"}